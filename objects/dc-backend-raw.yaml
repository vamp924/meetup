apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  creationTimestamp: "2021-03-15T12:56:06Z"
  generation: 1
  labels:
    app: db-fr-ba
    template: db-fr-ba
  managedFields:
  - apiVersion: apps.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:app: {}
          f:template: {}
      f:spec:
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          .: {}
          f:deploymentconfig: {}
        f:strategy:
          f:activeDeadlineSeconds: {}
          f:rollingParams:
            .: {}
            f:intervalSeconds: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
            f:timeoutSeconds: {}
            f:updatePeriodSeconds: {}
          f:type: {}
        f:template:
          .: {}
          f:metadata:
            .: {}
            f:creationTimestamp: {}
            f:labels:
              .: {}
              f:deploymentconfig: {}
          f:spec:
            .: {}
            f:containers:
              .: {}
              k:{"name":"backend"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"DATABASE_DATABASE"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"DATABASE_HOST"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"DATABASE_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"DATABASE_PORT"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"DATABASE_USER"}:
                    .: {}
                    f:name: {}
                    f:valueFrom:
                      .: {}
                      f:secretKeyRef:
                        .: {}
                        f:key: {}
                        f:name: {}
                  k:{"name":"JAVA_APP_JAR"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                  k:{"containerPort":8778,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                  k:{"containerPort":9779,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
        f:triggers: {}
    manager: kubectl-create
    operation: Update
    time: "2021-03-15T12:56:06Z"
  - apiVersion: apps.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
    manager: openshift-controller-manager
    operation: Update
    time: "2021-03-15T12:56:06Z"
  name: backend
  namespace: meetup
  resourceVersion: "13468198"
  selfLink: /apis/apps.openshift.io/v1/namespaces/meetup/deploymentconfigs/backend
  uid: 5ba0dbc0-4bb1-438f-83b1-1c640775b27f
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    deploymentconfig: backend
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        deploymentconfig: backend
    spec:
      containers:
      - env:
        - name: JAVA_APP_JAR
          value: /deployments/backend-0.1-all.jar
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PASSWORD
              name: database-db-auth
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              key: USER
              name: database-db-auth
        - name: DATABASE_DATABASE
          valueFrom:
            secretKeyRef:
              key: DATABASE
              name: database-db-auth
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              key: HOST
              name: database-db-auth
        - name: DATABASE_PORT
          valueFrom:
            secretKeyRef:
              key: PORT
              name: database-db-auth
        imagePullPolicy: Always
        name: backend
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8778
          protocol: TCP
        - containerPort: 9779
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - backend
      from:
        kind: ImageStreamTag
        name: backend:latest
        namespace: meetup
    type: ImageChange
status:
  availableReplicas: 0
  conditions:
  - lastTransitionTime: "2021-03-15T12:56:06Z"
    lastUpdateTime: "2021-03-15T12:56:06Z"
    message: Deployment config does not have minimum availability.
    status: "False"
    type: Available
  latestVersion: 0
  observedGeneration: 1
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
